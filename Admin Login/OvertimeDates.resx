<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddMode.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>